// frontend/src/components/formGen/components/forms/SharedFormStep1.tsx

import React, { useEffect } from 'react';
import { UseFormRegister, UseFormWatch, UseFormSetValue } from 'react-hook-form';
import { IManufacturingReportForm } from '../../pages/types';
import EmployeeInputRow from './EmployeeInputRow';
import ConditionCheckItem from './ConditionCheckItem';
import { FieldErrors } from 'react-hook-form';
import ChecklistTable from './ChecklistTable';

// 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á Interface ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Props ‡∏ó‡∏µ‡πà Component ‡∏ô‡∏µ‡πâ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
interface SharedFormStep1Props {
  register: UseFormRegister<IManufacturingReportForm>;
  watch: UseFormWatch<IManufacturingReportForm>;
  setValue: UseFormSetValue<IManufacturingReportForm>;
  errors: FieldErrors<IManufacturingReportForm>;
  packagingWarningItemName: string;
}

const checklistItems = [
  { id: 'butterflyValve' as const, label: 'Butterfly valve', condition: 'Turn off' },
  { id: 'coolingValve' as const, label: 'Cooling Valve', condition: 'Turn off' },
];

const SharedFormStep1: React.FC<SharedFormStep1Props> = ({ register, watch, setValue, packagingWarningItemName, errors }) => {
  const inputClass = "w-full rounded-lg border-[1.5px] border-stroke bg-transparent px-5 py-3 text-black outline-none transition focus:border-primary active:border-primary dark:border-form-strokedark dark:bg-form-input dark:text-white dark:focus:border-primary";
  const firstMcOperatorName = watch('mcOperators.0.name');
  const firstMcOperatorNo = watch('mcOperators.0.number');

  useEffect(() => {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á "‡∏ä‡∏∑‡πà‡∏≠" ‡πÅ‡∏•‡∏∞ "‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà" ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
    if (firstMcOperatorName && firstMcOperatorNo) {
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö "‡∏ä‡∏∑‡πà‡∏≠ (‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà)"
      const combinedValue = `${firstMcOperatorName} (${firstMcOperatorNo})`;
      setValue('checklist.coolingValve', combinedValue, { shouldValidate: true });
      setValue('checklist.butterflyValve', combinedValue, { shouldValidate: true });
    }
    // ‡∏ñ‡πâ‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏π‡∏Å‡∏•‡∏ö (‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏¥‡∏î) ‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏Ñ‡πà‡∏≤‡∏ó‡∏¥‡πâ‡∏á
    else if (!firstMcOperatorName) {
      setValue('checklist.coolingValve', '');
      setValue('checklist.butterflyValve', '');
    }
  }, [firstMcOperatorName, firstMcOperatorNo, setValue]); // ‚ú® 3. ‡πÄ‡∏û‡∏¥‡πà‡∏° firstMcOperatorNo ‡πÉ‡∏ô dependency array

  return (
    <div>
      {/* ‡∏™‡πà‡∏ß‡∏ô Basic Data (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏∏‡∏Å‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏£) */}
      <div className="border-b-2 border-stroke py-2 text-center bg-black dark:border-strokedark">
        <h5 className="font-medium text-white text-lg">Basic Data (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ)</h5>
      </div>
      <div className="rounded-b-sm border border-t-0 border-stroke p-5 dark:border-strokedark">
        <div className="mb-6 grid grid-cols-1 gap-6 border-b border-stroke pb-6 dark:border-strokedark md:grid-cols-2">
          <div className="flex items-center">
            <label className="w-1/3 text-black dark:text-white">Date</label>
            <input type="date" className={inputClass} {...register('basicData.date', { required: true })} />
          </div>
          <div className="flex items-center">
            <label className="w-1/3 text-black dark:text-white">Machine Name</label>
            <input type="text" className={inputClass} {...register('basicData.machineName', { required: true })} />
          </div>
          <div className="flex items-center">
            <label className="w-1/3 text-black dark:text-white">Lot no.</label>
            <input type="text" className={inputClass} {...register('basicData.lotNo', { required: true })} />
          </div>
        </div>
        <div className="mb-6 grid grid-cols-1 gap-6 border-b border-black pb-6 dark:border-strokedark lg:grid-cols-6">
          <div className="flex items-center justify-center text-center font-medium text-black dark:text-white lg:col-span-1">M/C operator</div>
          <div className="flex flex-col gap-5 lg:col-span-5">
            {[...Array(3)].map((_, index) => (
              <EmployeeInputRow key={`mc-${index}`} groupName="mcOperators" index={index} register={register} watch={watch} setValue={setValue} />
            ))}
          </div>
        </div>
        <div className="grid grid-cols-1 gap-6 lg:grid-cols-6">
          <div className="flex items-center justify-center text-center font-medium text-black dark:text-white lg:col-span-1">Assistant M/C</div>
          <div className="flex flex-col gap-5 lg:col-span-5">
            {[...Array(5)].map((_, index) => (
              <EmployeeInputRow key={`asst-${index}`} groupName="assistants" index={index} register={register} watch={watch} setValue={setValue} />
            ))}
          </div>
        </div>
      </div>

      <div className="border-b-2 border-stroke py-2 text-center bg-black dark:border-strokedark">
        <h5 className="font-medium text-white text-lg">Check List before turn on</h5>
      </div>
      {/* 3. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ Component ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á props ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÉ‡∏´‡πâ */}
      <ChecklistTable
        items={checklistItems}
        register={register}
        errors={errors}
        watch={watch} // üëà 4. ‡∏™‡πà‡∏á watch ‡∏•‡∏á‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
      />

      {/* ‡∏™‡πà‡∏ß‡∏ô Check the condition (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢) */}
      <div className="border-b-2 border-stroke py-2 text-center bg-black dark:border-strokedark">
        <h5 className="font-medium text-white text-lg">Check the condition (‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏†‡∏≤‡∏û‡∏ö‡∏£‡∏£‡∏à‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå)</h5>
      </div>
      <div className="rounded-b-sm border border-t-0 border-stroke p-5 dark:border-strokedark">
        <ConditionCheckItem
          index={0} title="‡∏ñ‡∏∏‡∏á (‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å)"
          description={`‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏†‡∏≤‡∏û‡∏ñ‡∏∏‡∏á‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å‡πÅ‡∏•‡∏∞‡∏´‡∏π‡∏¢‡∏Å‡∏ñ‡∏∏‡∏á‡∏ö‡∏£‡∏£‡∏à‡∏∏ ${packagingWarningItemName} ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ä‡∏≥‡∏£‡∏∏‡∏î‡πÅ‡∏•‡∏∞ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≠‡∏¢‡∏Ç‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡∏ñ‡∏∏‡∏á`}
          // 3. ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å Prop ‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
          warning={`‡∏´‡∏≤‡∏Å‡∏û‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥‡∏ñ‡∏∏‡∏á (${packagingWarningItemName}) ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏ä‡πâ‡πÇ‡∏î‡∏¢‡πÄ‡∏î‡πá‡∏î‡∏Ç‡∏≤‡∏î‡∏Å‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏à‡∏≤‡∏Å‡∏´‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô`}
          register={register}
          watch={watch}   // üëà ‡∏™‡πà‡∏á watch ‡∏•‡∏á‡πÑ‡∏õ
          errors={errors} // üëà ‡∏™‡πà‡∏á errors ‡∏•‡∏á‡πÑ‡∏õ
        />
        <ConditionCheckItem
          index={1} title="‡∏Å‡∏£‡∏∞‡∏õ‡πã‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"
          description="‡∏™‡∏†‡∏≤‡∏û‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå ‡πÑ‡∏°‡πà‡∏ö‡∏∏‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏£‡∏π‡∏õ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏®‡∏©‡πÑ‡∏°‡πâ ‡∏û‡∏•‡∏≤‡∏™‡∏ï‡∏¥‡∏Å/‡∏´‡∏ô‡∏±‡∏á‡∏¢‡∏≤‡∏á‡∏õ‡∏ô‡πÄ‡∏õ‡∏∑‡πâ‡∏≠‡∏ô"
          reference="Ref : SD-GN-043 ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏†‡∏≤‡∏ä‡∏ô‡∏∞‡∏ö‡∏£‡∏£‡∏à‡∏∏‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö"
          register={register}
          watch={watch}   // üëà ‡∏™‡πà‡∏á watch ‡∏•‡∏á‡πÑ‡∏õ
          errors={errors} // üëà ‡∏™‡πà‡∏á errors ‡∏•‡∏á‡πÑ‡∏õ
        />
      </div>
    </div>
  );
};

export default SharedFormStep1;